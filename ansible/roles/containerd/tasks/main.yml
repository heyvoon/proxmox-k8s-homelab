---
# roles/containerd/tasks/main.yml

- name: Gather systemd services
  ansible.builtin.service_facts:

- name: Install prereqs
  apt:
    name: [ca-certificates, curl, gnupg]
    state: present
    update_cache: yes

- name: Ensure keyrings dir
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: "0755"

- name: Add Docker GPG key (keyring)
  ansible.builtin.command: >
    bash -lc 'curl -fsSL https://download.docker.com/linux/ubuntu/gpg
    | gpg --dearmor -o /etc/apt/keyrings/docker.gpg'
  args:
    creates: /etc/apt/keyrings/docker.gpg

- name: Add Docker apt repo (uses keyring)
  copy:
    dest: /etc/apt/sources.list.d/docker.list
    mode: "0644"
    content: |
      deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable

# NOTE: Do NOT pin containerd.io=2.x â€” Docker repo ships 1.7.x packages.
# Install the latest repo version (Kubernetes supports containerd 1.7+).

- name: Install containerd
  apt:
    name: containerd.io
    state: present
    update_cache: yes

- name: Write containerd config (v2 + CRI + systemd cgroups)
  copy:
    dest: /etc/containerd/config.toml
    mode: "0644"
    content: |
      version = 2
      [plugins."io.containerd.grpc.v1.cri"]
        sandbox_image = "registry.k8s.io/pause:3.9"
        [plugins."io.containerd.grpc.v1.cri".containerd]
          default_runtime_name = "runc"
          [plugins."io.containerd.grpc.v1.cri".containerd.runtimes]
            [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
              runtime_type = "io.containerd.runc.v2"
              [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
                SystemdCgroup = true
  notify: restart containerd

# Pick crictl to match your K8s minor (e.g., 1.33.0)
- name: Set crictl version (align with kubelet)
  set_fact:
    crictl_version: "v1.33.0"

- name: Download crictl {{ crictl_version }}
  get_url:
    url: "https://github.com/kubernetes-sigs/cri-tools/releases/download/{{ crictl_version }}/crictl-{{ crictl_version }}-linux-amd64.tar.gz"
    dest: /tmp/crictl.tgz
    mode: "0644"

- name: Install crictl
  unarchive:
    src: /tmp/crictl.tgz
    dest: /usr/local/bin/
    remote_src: true
    extra_opts: [--no-same-owner]
  # notify: restart kubelet  # optional

- name: Verify crictl
  command: crictl --version
  register: crictl_v
  changed_when: false


